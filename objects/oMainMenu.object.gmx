<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMenuCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create menu options
menu[0] = "New Game";
menu[1] = "Continue";
menu[2] = "Options";
menu[3] = "Quit";

space = sprite_get_height(sMenuButton);
menuPos = 0;

targetRoom = noone;

state = "waiting";







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop music and go to targetRoom

audio_stop_sound(global.bgm);

room_goto(targetRoom);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move cursor, play sound, execute selection
var move = 0;

if(state == "waiting") {
    //move is 1, -1, or 0
    move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")),0);
    move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("S")),0);
    
    if (move != 0) {
        menuPos += move;
        audio_play_sound(soundMenuChange, 10, false);
        if (menuPos &lt; 0) menuPos = array_length_1d(menu) - 1;
        if (menuPos &gt; array_length_1d(menu) -1) menuPos = 0;
    }
    
    push = check_confirm_key();
    if (push  == 1) {
        state = "executing";
        audio_play_sound(soundMenuSelect, 10, false);
        switch (menuPos) {
        
        case 0:
            targetRoom = rm_newGame_CS;
            instance_create(x, y, oFadeOut);
            audio_sound_gain(global.bgm, 0, WAIT_TIME);
            alarm[0] = room_speed*(WAIT_TIME/1000);
        break;
        
        case 1:
            targetRoom = rm_test1;
            instance_create(x, y, oFadeOut);
            audio_sound_gain(global.bgm, 0, WAIT_TIME);
            alarm[0] = room_speed*(WAIT_TIME/1000);
        break;
        
        case 2:
            room_goto(rm_options);
        break;
        
        case 3:
            game_end();
        break;
        
        }
    }
}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play background music
global.bgm = audio_play_sound(bgmMainMenu,100,true);









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
draw_set_font(fMenuFont);
draw_set_color(c_black);

var width = surface_get_width(application_surface)/2;
var height = surface_get_height(application_surface)*.35;


for(m = 0; m &lt; array_length_1d(menu); m += 1) {
    draw_sprite(sMenuButton, 0, width, height + (m * space));
    draw_text(width, height + (m * space), string(menu[m]));
}

draw_sprite(sprite_index, 0, width - (sprite_get_width(sMenuButton)/2), height + menuPos * space);

reset_draw_defaults();












</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
