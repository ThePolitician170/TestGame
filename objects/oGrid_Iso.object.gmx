<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stores the isometric grid
cols = ceil(room_width / NODE_SIZE);
rows = ceil(room_height / NODE_SIZE);
iso_sprite = ds_grid_create(cols, rows); // sprites per grid cell
ds_grid_clear(iso_sprite, s_grass_iso);
iso_subimg = ds_grid_create(cols, rows); // subimages per grid cell
ds_grid_clear(iso_subimg, 0);

instance_create(x, y, oCursor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Click to drag view
// start:
if (mouse_check_button_pressed(mb_left)) {
    drag_x = mouse_x
    drag_y = mouse_y
}
// update:
if (mouse_check_button(mb_left)) {
    // actual dragging logic:
    view_xview = drag_x - (mouse_x - view_xview)
    view_yview = drag_y - (mouse_y - view_yview)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle window resizing
var js = (os_browser != browser_not_a_browser);
// get window size:
var ww, wh;
if (js) {
    ww = display_get_width();
    wh = display_get_height();
} else {
    ww = window_get_width();
    wh = window_get_height();
}
// get application surface:
var sf = application_surface;
var sw = surface_get_width(sf);
var sh = surface_get_height(sf);
// resize a.s. if they don't match:
if (ww != sw || wh != sh) {
    if (js) window_set_size(ww, wh);
    surface_resize(sf, ww, wh);
    // set new sizes for view:
    view_wview[0] = ww;
    view_hview[0] = wh;
    view_wport[0] = ww;
    view_hport[0] = wh;
    // shift the view to maintain the same center point:
    view_xview[0] += (sw - ww) div 2;
    view_yview[0] += (sh - wh) div 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_destroy(iso_sprite);
ds_grid_destroy(iso_subimg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _iso_sprite = iso_sprite;
var _iso_subimg = iso_subimg;
with (oTile) if (iso_sprite &gt;= 0) {
    var _x = round(x / NODE_SIZE);
    var _y = round(y / NODE_SIZE);
    //
    ds_grid_set(_iso_sprite, _x, _y, iso_sprite);
    ds_grid_set(_iso_subimg, _x, _y, iso_subimg);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var _x = 0; _x &lt; cols; _x += 1)
for (var _y = 0; _y &lt; rows; _y += 1) {
    var s = ds_grid_get(iso_sprite, _x, _y);
    if (s &gt;= 0) {
        var ix = _x * NODE_SIZE;
        var iy = _y * NODE_SIZE;
        var rx = iso_to_scr_x(ix, iy);
        var ry = iso_to_scr_y(ix, iy);
        draw_sprite(s, ds_grid_get(iso_subimg, _x, _y), rx, ry);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
